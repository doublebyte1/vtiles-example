<html>
<head><title>OGC API - Tiles Styling</title></head>
<body>
<div id="map" style="width:100vw;height:100vh;"></div>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css"/>
<script type="text/javascript" src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"></script>
<script type="text/javascript" src="https://unpkg.com/leaflet.vectorgrid@1.3.0/dist/Leaflet.VectorGrid.bundled.js"></script>
<script>
map = L.map('map').setView({ lng: -9.1553792, lat: 38.7088384 }, 13);
map.addLayer(
    new L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
    subdomains: 'abcd',
    minZoom: 1,
    maxZoom: 16,
    ext: 'jpg'
    }));

var vectorTileStyling = {
    meta: function(properties) {
        return ({
            fill: true,
            fillColor: "#ffffff",
            fillOpacity: 0.0,
            weight: 1,
            color: "green",
            opacity: 0.7,
        });
    },
    hits: function(properties) {
        return ({
            fill: true,
            fillColor: "#ffffff",
            fillOpacity: 0.5,
            weight: 1,
            color: "red",
            opacity: 0.7,
        });
    }
}

var mapVectorTileOptions = {
    rendererFactory: L.canvas.tile,
    interactive: true,
    // maxNativeZoom: 11,
    // minZoom: 1,
    vectorTileLayerStyles: vectorTileStyling,
};

var pbfURL='http://localhost/collections/lisbon/tiles/WorldCRS84Quad/{z}/{x}/{y}?f=mvt';

/*  var pbfLayer=L.vectorGrid.protobuf(pbfURL,mapVectorTileOptions).on('click',function(e) {
     console.log(e.layer);
     L.DomEvent.stop(e);
 }).addTo(map);  */

const start = Date.now();
(async () => {
      const border = await fetch('http://localhost/collections/pm10/items?limit=100000', {
        headers: {
          'Accept': 'application/geo+json'
        }
      }).then(response => response.json());
      
      L.geoJSON(border).addTo(map);
      const end = Date.now();
      console.log(`Execution time for pm10: ${(end - start)/1000} s`);

    })();

const start2 = Date.now();
(async () => {
  const border = await fetch('http://localhost/collections/lisbon_20210912_pr_/items?limit=100000', {
    headers: {
      'Accept': 'application/geo+json'
    }
  }).then(response => response.json());
  
  L.geoJSON(border).addTo(map);
  const end2 = Date.now();
  console.log(`Execution time for lisbon_20210912_pr_: ${(end2 - start2)/1000} s`);

})();



</script>
</body>
</html>